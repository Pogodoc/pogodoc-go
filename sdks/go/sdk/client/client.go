// This file was auto-generated by Fern from our API Definition.

package client

import (
	context "context"
	http "net/http"
	core "pogodoc/go/sdk/core"
	documents "pogodoc/go/sdk/documents"
	internal "pogodoc/go/sdk/internal"
	option "pogodoc/go/sdk/option"
	templates "pogodoc/go/sdk/templates"
	tokens "pogodoc/go/sdk/tokens"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	Templates *templates.Client
	Documents *documents.Client
	Tokens    *tokens.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:    options.ToHeader(),
		Templates: templates.NewClient(opts...),
		Documents: documents.NewClient(opts...),
		Tokens:    tokens.NewClient(opts...),
	}
}

func (c *Client) PostBoshe(
	ctx context.Context,
	opts ...option.RequestOption,
) error {
	options := core.NewRequestOptions(opts...)
	baseURL := internal.ResolveBaseURL(
		options.BaseURL,
		c.baseURL,
		"https://api.pogodoc.com",
	)
	endpointURL := baseURL + "/boshe"
	headers := internal.MergeHeaders(
		c.header.Clone(),
		options.ToHeader(),
	)

	if err := c.caller.Call(
		ctx,
		&internal.CallParams{
			URL:             endpointURL,
			Method:          http.MethodPost,
			Headers:         headers,
			MaxAttempts:     options.MaxAttempts,
			BodyProperties:  options.BodyProperties,
			QueryParameters: options.QueryParameters,
			Client:          options.HTTPClient,
		},
	); err != nil {
		return err
	}
	return nil
}
