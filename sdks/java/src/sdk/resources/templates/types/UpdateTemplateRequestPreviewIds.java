/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.templates.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UpdateTemplateRequestPreviewIds.Builder.class
)
public final class UpdateTemplateRequestPreviewIds {
  private final String pngJobId;

  private final String pdfJobId;

  private final Map<String, Object> additionalProperties;

  private UpdateTemplateRequestPreviewIds(String pngJobId, String pdfJobId,
      Map<String, Object> additionalProperties) {
    this.pngJobId = pngJobId;
    this.pdfJobId = pdfJobId;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("pngJobId")
  public String getPngJobId() {
    return pngJobId;
  }

  @JsonProperty("pdfJobId")
  public String getPdfJobId() {
    return pdfJobId;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UpdateTemplateRequestPreviewIds && equalTo((UpdateTemplateRequestPreviewIds) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(UpdateTemplateRequestPreviewIds other) {
    return pngJobId.equals(other.pngJobId) && pdfJobId.equals(other.pdfJobId);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.pngJobId, this.pdfJobId);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static PngJobIdStage builder() {
    return new Builder();
  }

  public interface PngJobIdStage {
    PdfJobIdStage pngJobId(@NotNull String pngJobId);

    Builder from(UpdateTemplateRequestPreviewIds other);
  }

  public interface PdfJobIdStage {
    _FinalStage pdfJobId(@NotNull String pdfJobId);
  }

  public interface _FinalStage {
    UpdateTemplateRequestPreviewIds build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements PngJobIdStage, PdfJobIdStage, _FinalStage {
    private String pngJobId;

    private String pdfJobId;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(UpdateTemplateRequestPreviewIds other) {
      pngJobId(other.getPngJobId());
      pdfJobId(other.getPdfJobId());
      return this;
    }

    @java.lang.Override
    @JsonSetter("pngJobId")
    public PdfJobIdStage pngJobId(@NotNull String pngJobId) {
      this.pngJobId = Objects.requireNonNull(pngJobId, "pngJobId must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("pdfJobId")
    public _FinalStage pdfJobId(@NotNull String pdfJobId) {
      this.pdfJobId = Objects.requireNonNull(pdfJobId, "pdfJobId must not be null");
      return this;
    }

    @java.lang.Override
    public UpdateTemplateRequestPreviewIds build() {
      return new UpdateTemplateRequestPreviewIds(pngJobId, pdfJobId, additionalProperties);
    }
  }
}
