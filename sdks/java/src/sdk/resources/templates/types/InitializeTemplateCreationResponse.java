/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.templates.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = InitializeTemplateCreationResponse.Builder.class
)
public final class InitializeTemplateCreationResponse {
  private final String jobId;

  private final String presignedTemplateUploadUrl;

  private final Map<String, Object> additionalProperties;

  private InitializeTemplateCreationResponse(String jobId, String presignedTemplateUploadUrl,
      Map<String, Object> additionalProperties) {
    this.jobId = jobId;
    this.presignedTemplateUploadUrl = presignedTemplateUploadUrl;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("jobId")
  public String getJobId() {
    return jobId;
  }

  @JsonProperty("presignedTemplateUploadUrl")
  public String getPresignedTemplateUploadUrl() {
    return presignedTemplateUploadUrl;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof InitializeTemplateCreationResponse && equalTo((InitializeTemplateCreationResponse) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(InitializeTemplateCreationResponse other) {
    return jobId.equals(other.jobId) && presignedTemplateUploadUrl.equals(other.presignedTemplateUploadUrl);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.jobId, this.presignedTemplateUploadUrl);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static JobIdStage builder() {
    return new Builder();
  }

  public interface JobIdStage {
    PresignedTemplateUploadUrlStage jobId(@NotNull String jobId);

    Builder from(InitializeTemplateCreationResponse other);
  }

  public interface PresignedTemplateUploadUrlStage {
    _FinalStage presignedTemplateUploadUrl(@NotNull String presignedTemplateUploadUrl);
  }

  public interface _FinalStage {
    InitializeTemplateCreationResponse build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements JobIdStage, PresignedTemplateUploadUrlStage, _FinalStage {
    private String jobId;

    private String presignedTemplateUploadUrl;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(InitializeTemplateCreationResponse other) {
      jobId(other.getJobId());
      presignedTemplateUploadUrl(other.getPresignedTemplateUploadUrl());
      return this;
    }

    @java.lang.Override
    @JsonSetter("jobId")
    public PresignedTemplateUploadUrlStage jobId(@NotNull String jobId) {
      this.jobId = Objects.requireNonNull(jobId, "jobId must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("presignedTemplateUploadUrl")
    public _FinalStage presignedTemplateUploadUrl(@NotNull String presignedTemplateUploadUrl) {
      this.presignedTemplateUploadUrl = Objects.requireNonNull(presignedTemplateUploadUrl, "presignedTemplateUploadUrl must not be null");
      return this;
    }

    @java.lang.Override
    public InitializeTemplateCreationResponse build() {
      return new InitializeTemplateCreationResponse(jobId, presignedTemplateUploadUrl, additionalProperties);
    }
  }
}
