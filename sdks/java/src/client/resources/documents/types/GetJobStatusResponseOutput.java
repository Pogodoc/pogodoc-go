/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.documents.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = GetJobStatusResponseOutput.Builder.class
)
public final class GetJobStatusResponseOutput {
  private final GetJobStatusResponseOutputData data;

  private final GetJobStatusResponseOutputMetadata metadata;

  private final Map<String, Object> additionalProperties;

  private GetJobStatusResponseOutput(GetJobStatusResponseOutputData data,
      GetJobStatusResponseOutputMetadata metadata, Map<String, Object> additionalProperties) {
    this.data = data;
    this.metadata = metadata;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("data")
  public GetJobStatusResponseOutputData getData() {
    return data;
  }

  @JsonProperty("metadata")
  public GetJobStatusResponseOutputMetadata getMetadata() {
    return metadata;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof GetJobStatusResponseOutput && equalTo((GetJobStatusResponseOutput) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(GetJobStatusResponseOutput other) {
    return data.equals(other.data) && metadata.equals(other.metadata);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.data, this.metadata);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static DataStage builder() {
    return new Builder();
  }

  public interface DataStage {
    MetadataStage data(@NotNull GetJobStatusResponseOutputData data);

    Builder from(GetJobStatusResponseOutput other);
  }

  public interface MetadataStage {
    _FinalStage metadata(@NotNull GetJobStatusResponseOutputMetadata metadata);
  }

  public interface _FinalStage {
    GetJobStatusResponseOutput build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements DataStage, MetadataStage, _FinalStage {
    private GetJobStatusResponseOutputData data;

    private GetJobStatusResponseOutputMetadata metadata;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(GetJobStatusResponseOutput other) {
      data(other.getData());
      metadata(other.getMetadata());
      return this;
    }

    @java.lang.Override
    @JsonSetter("data")
    public MetadataStage data(@NotNull GetJobStatusResponseOutputData data) {
      this.data = Objects.requireNonNull(data, "data must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("metadata")
    public _FinalStage metadata(@NotNull GetJobStatusResponseOutputMetadata metadata) {
      this.metadata = Objects.requireNonNull(metadata, "metadata must not be null");
      return this;
    }

    @java.lang.Override
    public GetJobStatusResponseOutput build() {
      return new GetJobStatusResponseOutput(data, metadata, additionalProperties);
    }
  }
}
