/**
 * This file was auto-generated by Fern from our API Definition.
 */

import core.ClientOptions;
import core.Environment;
import java.lang.String;
import okhttp3.OkHttpClient;

public final class PogodocApiClientBuilder {
  private ClientOptions.Builder clientOptionsBuilder = ClientOptions.builder();

  private String token = null;

  private Environment environment = Environment.DEFAULT;

  /**
   * Sets token
   */
  public PogodocApiClientBuilder token(String token) {
    this.token = token;
    return this;
  }

  public PogodocApiClientBuilder environment(Environment environment) {
    this.environment = environment;
    return this;
  }

  public PogodocApiClientBuilder url(String url) {
    this.environment = Environment.custom(url);
    return this;
  }

  /**
   * Sets the timeout (in seconds) for the client. Defaults to 60 seconds.
   */
  public PogodocApiClientBuilder timeout(int timeout) {
    this.clientOptionsBuilder.timeout(timeout);
    return this;
  }

  /**
   * Sets the maximum number of retries for the client. Defaults to 2 retries.
   */
  public PogodocApiClientBuilder maxRetries(int maxRetries) {
    this.clientOptionsBuilder.maxRetries(maxRetries);
    return this;
  }

  /**
   * Sets the underlying OkHttp client
   */
  public PogodocApiClientBuilder httpClient(OkHttpClient httpClient) {
    this.clientOptionsBuilder.httpClient(httpClient);
    return this;
  }

  public PogodocApiClient build() {
    if (token == null) {
      throw new RuntimeException("Please provide token");
    }
    this.clientOptionsBuilder.addHeader("Authorization", "Bearer " + this.token);
    clientOptionsBuilder.environment(this.environment);
    return new PogodocApiClient(clientOptionsBuilder.build());
  }
}
