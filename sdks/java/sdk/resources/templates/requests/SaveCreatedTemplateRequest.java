/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.templates.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;
import resources.templates.types.SaveCreatedTemplateRequestPreviewIds;
import resources.templates.types.SaveCreatedTemplateRequestTemplateInfo;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = SaveCreatedTemplateRequest.Builder.class
)
public final class SaveCreatedTemplateRequest {
  private final SaveCreatedTemplateRequestTemplateInfo templateInfo;

  private final SaveCreatedTemplateRequestPreviewIds previewIds;

  private final Map<String, Object> additionalProperties;

  private SaveCreatedTemplateRequest(SaveCreatedTemplateRequestTemplateInfo templateInfo,
      SaveCreatedTemplateRequestPreviewIds previewIds, Map<String, Object> additionalProperties) {
    this.templateInfo = templateInfo;
    this.previewIds = previewIds;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("templateInfo")
  public SaveCreatedTemplateRequestTemplateInfo getTemplateInfo() {
    return templateInfo;
  }

  @JsonProperty("previewIds")
  public SaveCreatedTemplateRequestPreviewIds getPreviewIds() {
    return previewIds;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof SaveCreatedTemplateRequest && equalTo((SaveCreatedTemplateRequest) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(SaveCreatedTemplateRequest other) {
    return templateInfo.equals(other.templateInfo) && previewIds.equals(other.previewIds);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.templateInfo, this.previewIds);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static TemplateInfoStage builder() {
    return new Builder();
  }

  public interface TemplateInfoStage {
    PreviewIdsStage templateInfo(@NotNull SaveCreatedTemplateRequestTemplateInfo templateInfo);

    Builder from(SaveCreatedTemplateRequest other);
  }

  public interface PreviewIdsStage {
    _FinalStage previewIds(@NotNull SaveCreatedTemplateRequestPreviewIds previewIds);
  }

  public interface _FinalStage {
    SaveCreatedTemplateRequest build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements TemplateInfoStage, PreviewIdsStage, _FinalStage {
    private SaveCreatedTemplateRequestTemplateInfo templateInfo;

    private SaveCreatedTemplateRequestPreviewIds previewIds;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(SaveCreatedTemplateRequest other) {
      templateInfo(other.getTemplateInfo());
      previewIds(other.getPreviewIds());
      return this;
    }

    @java.lang.Override
    @JsonSetter("templateInfo")
    public PreviewIdsStage templateInfo(
        @NotNull SaveCreatedTemplateRequestTemplateInfo templateInfo) {
      this.templateInfo = Objects.requireNonNull(templateInfo, "templateInfo must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("previewIds")
    public _FinalStage previewIds(@NotNull SaveCreatedTemplateRequestPreviewIds previewIds) {
      this.previewIds = Objects.requireNonNull(previewIds, "previewIds must not be null");
      return this;
    }

    @java.lang.Override
    public SaveCreatedTemplateRequest build() {
      return new SaveCreatedTemplateRequest(templateInfo, previewIds, additionalProperties);
    }
  }
}
