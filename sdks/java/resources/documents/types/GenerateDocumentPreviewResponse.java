/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.documents.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = GenerateDocumentPreviewResponse.Builder.class
)
public final class GenerateDocumentPreviewResponse {
  private final Optional<String> url;

  private final String jobId;

  private final Map<String, Object> additionalProperties;

  private GenerateDocumentPreviewResponse(Optional<String> url, String jobId,
      Map<String, Object> additionalProperties) {
    this.url = url;
    this.jobId = jobId;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("url")
  public Optional<String> getUrl() {
    return url;
  }

  @JsonProperty("jobId")
  public String getJobId() {
    return jobId;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof GenerateDocumentPreviewResponse && equalTo((GenerateDocumentPreviewResponse) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(GenerateDocumentPreviewResponse other) {
    return url.equals(other.url) && jobId.equals(other.jobId);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.url, this.jobId);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static JobIdStage builder() {
    return new Builder();
  }

  public interface JobIdStage {
    _FinalStage jobId(@NotNull String jobId);

    Builder from(GenerateDocumentPreviewResponse other);
  }

  public interface _FinalStage {
    GenerateDocumentPreviewResponse build();

    _FinalStage url(Optional<String> url);

    _FinalStage url(String url);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements JobIdStage, _FinalStage {
    private String jobId;

    private Optional<String> url = Optional.empty();

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(GenerateDocumentPreviewResponse other) {
      url(other.getUrl());
      jobId(other.getJobId());
      return this;
    }

    @java.lang.Override
    @JsonSetter("jobId")
    public _FinalStage jobId(@NotNull String jobId) {
      this.jobId = Objects.requireNonNull(jobId, "jobId must not be null");
      return this;
    }

    @java.lang.Override
    public _FinalStage url(String url) {
      this.url = Optional.ofNullable(url);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "url",
        nulls = Nulls.SKIP
    )
    public _FinalStage url(Optional<String> url) {
      this.url = url;
      return this;
    }

    @java.lang.Override
    public GenerateDocumentPreviewResponse build() {
      return new GenerateDocumentPreviewResponse(url, jobId, additionalProperties);
    }
  }
}
