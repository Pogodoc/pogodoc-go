/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.render.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = GetJobStatusResponse.Builder.class
)
public final class GetJobStatusResponse {
  private final GetJobStatusResponseType type;

  private final String jobId;

  private final GetJobStatusResponseTarget target;

  private final Optional<GetJobStatusResponseOutput> output;

  private final Optional<Boolean> success;

  private final Optional<String> status;

  private final Map<String, Object> additionalProperties;

  private GetJobStatusResponse(GetJobStatusResponseType type, String jobId,
      GetJobStatusResponseTarget target, Optional<GetJobStatusResponseOutput> output,
      Optional<Boolean> success, Optional<String> status,
      Map<String, Object> additionalProperties) {
    this.type = type;
    this.jobId = jobId;
    this.target = target;
    this.output = output;
    this.success = success;
    this.status = status;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("type")
  public GetJobStatusResponseType getType() {
    return type;
  }

  @JsonProperty("jobId")
  public String getJobId() {
    return jobId;
  }

  @JsonProperty("target")
  public GetJobStatusResponseTarget getTarget() {
    return target;
  }

  @JsonProperty("output")
  public Optional<GetJobStatusResponseOutput> getOutput() {
    return output;
  }

  @JsonProperty("success")
  public Optional<Boolean> getSuccess() {
    return success;
  }

  @JsonProperty("status")
  public Optional<String> getStatus() {
    return status;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof GetJobStatusResponse && equalTo((GetJobStatusResponse) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(GetJobStatusResponse other) {
    return type.equals(other.type) && jobId.equals(other.jobId) && target.equals(other.target) && output.equals(other.output) && success.equals(other.success) && status.equals(other.status);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.type, this.jobId, this.target, this.output, this.success, this.status);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static TypeStage builder() {
    return new Builder();
  }

  public interface TypeStage {
    JobIdStage type(@NotNull GetJobStatusResponseType type);

    Builder from(GetJobStatusResponse other);
  }

  public interface JobIdStage {
    TargetStage jobId(@NotNull String jobId);
  }

  public interface TargetStage {
    _FinalStage target(@NotNull GetJobStatusResponseTarget target);
  }

  public interface _FinalStage {
    GetJobStatusResponse build();

    _FinalStage output(Optional<GetJobStatusResponseOutput> output);

    _FinalStage output(GetJobStatusResponseOutput output);

    _FinalStage success(Optional<Boolean> success);

    _FinalStage success(Boolean success);

    _FinalStage status(Optional<String> status);

    _FinalStage status(String status);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements TypeStage, JobIdStage, TargetStage, _FinalStage {
    private GetJobStatusResponseType type;

    private String jobId;

    private GetJobStatusResponseTarget target;

    private Optional<String> status = Optional.empty();

    private Optional<Boolean> success = Optional.empty();

    private Optional<GetJobStatusResponseOutput> output = Optional.empty();

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(GetJobStatusResponse other) {
      type(other.getType());
      jobId(other.getJobId());
      target(other.getTarget());
      output(other.getOutput());
      success(other.getSuccess());
      status(other.getStatus());
      return this;
    }

    @java.lang.Override
    @JsonSetter("type")
    public JobIdStage type(@NotNull GetJobStatusResponseType type) {
      this.type = Objects.requireNonNull(type, "type must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("jobId")
    public TargetStage jobId(@NotNull String jobId) {
      this.jobId = Objects.requireNonNull(jobId, "jobId must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("target")
    public _FinalStage target(@NotNull GetJobStatusResponseTarget target) {
      this.target = Objects.requireNonNull(target, "target must not be null");
      return this;
    }

    @java.lang.Override
    public _FinalStage status(String status) {
      this.status = Optional.ofNullable(status);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "status",
        nulls = Nulls.SKIP
    )
    public _FinalStage status(Optional<String> status) {
      this.status = status;
      return this;
    }

    @java.lang.Override
    public _FinalStage success(Boolean success) {
      this.success = Optional.ofNullable(success);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "success",
        nulls = Nulls.SKIP
    )
    public _FinalStage success(Optional<Boolean> success) {
      this.success = success;
      return this;
    }

    @java.lang.Override
    public _FinalStage output(GetJobStatusResponseOutput output) {
      this.output = Optional.ofNullable(output);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "output",
        nulls = Nulls.SKIP
    )
    public _FinalStage output(Optional<GetJobStatusResponseOutput> output) {
      this.output = output;
      return this;
    }

    @java.lang.Override
    public GetJobStatusResponse build() {
      return new GetJobStatusResponse(type, jobId, target, output, success, status, additionalProperties);
    }
  }
}
