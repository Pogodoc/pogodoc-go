/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.templates.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UploadTemplateIndexHtmlRequest.Builder.class
)
public final class UploadTemplateIndexHtmlRequest {
  private final String templateIndex;

  private final Map<String, Object> additionalProperties;

  private UploadTemplateIndexHtmlRequest(String templateIndex,
      Map<String, Object> additionalProperties) {
    this.templateIndex = templateIndex;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("templateIndex")
  public String getTemplateIndex() {
    return templateIndex;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UploadTemplateIndexHtmlRequest && equalTo((UploadTemplateIndexHtmlRequest) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(UploadTemplateIndexHtmlRequest other) {
    return templateIndex.equals(other.templateIndex);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.templateIndex);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static TemplateIndexStage builder() {
    return new Builder();
  }

  public interface TemplateIndexStage {
    _FinalStage templateIndex(@NotNull String templateIndex);

    Builder from(UploadTemplateIndexHtmlRequest other);
  }

  public interface _FinalStage {
    UploadTemplateIndexHtmlRequest build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements TemplateIndexStage, _FinalStage {
    private String templateIndex;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(UploadTemplateIndexHtmlRequest other) {
      templateIndex(other.getTemplateIndex());
      return this;
    }

    @java.lang.Override
    @JsonSetter("templateIndex")
    public _FinalStage templateIndex(@NotNull String templateIndex) {
      this.templateIndex = Objects.requireNonNull(templateIndex, "templateIndex must not be null");
      return this;
    }

    @java.lang.Override
    public UploadTemplateIndexHtmlRequest build() {
      return new UploadTemplateIndexHtmlRequest(templateIndex, additionalProperties);
    }
  }
}
