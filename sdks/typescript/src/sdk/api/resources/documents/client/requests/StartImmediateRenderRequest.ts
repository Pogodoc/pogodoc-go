/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         data: {
 *             "key": "value"
 *         },
 *         type: "docx",
 *         target: "pdf"
 *     }
 */
export interface StartImmediateRenderRequest {
    data: Record<string, unknown>;
    type: StartImmediateRenderRequest.Type;
    target: StartImmediateRenderRequest.Target;
    templateId?: string;
    formatOpts?: StartImmediateRenderRequest.FormatOpts;
    template?: string;
}

export namespace StartImmediateRenderRequest {
    export type Type = "docx" | "xlsx" | "pptx" | "ejs" | "html" | "latex" | "react";
    export const Type = {
        Docx: "docx",
        Xlsx: "xlsx",
        Pptx: "pptx",
        Ejs: "ejs",
        Html: "html",
        Latex: "latex",
        React: "react",
    } as const;
    export type Target = "pdf" | "html" | "docx" | "xlsx" | "pptx" | "png" | "jpg";
    export const Target = {
        Pdf: "pdf",
        Html: "html",
        Docx: "docx",
        Xlsx: "xlsx",
        Pptx: "pptx",
        Png: "png",
        Jpg: "jpg",
    } as const;

    export interface FormatOpts {
        fromPage?: number;
        toPage?: number;
        format?: FormatOpts.Format;
        waitForSelector?: string;
    }

    export namespace FormatOpts {
        export type Format = "letter" | "legal" | "tabloid" | "ledger" | "a0" | "a1" | "a2" | "a3" | "a4" | "a5" | "a6";
        export const Format = {
            Letter: "letter",
            Legal: "legal",
            Tabloid: "tabloid",
            Ledger: "ledger",
            A0: "a0",
            A1: "a1",
            A2: "a2",
            A3: "a3",
            A4: "a4",
            A5: "a5",
            A6: "a6",
        } as const;
    }
}
