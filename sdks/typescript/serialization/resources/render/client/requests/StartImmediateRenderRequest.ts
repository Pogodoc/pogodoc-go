/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as PogodocApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { StartImmediateRenderRequestType } from "../../types/StartImmediateRenderRequestType";
import { StartImmediateRenderRequestTarget } from "../../types/StartImmediateRenderRequestTarget";
import { StartImmediateRenderRequestFormatOpts } from "../../types/StartImmediateRenderRequestFormatOpts";

export const StartImmediateRenderRequest: core.serialization.Schema<
    serializers.StartImmediateRenderRequest.Raw,
    PogodocApi.StartImmediateRenderRequest
> = core.serialization.object({
    startImmediateRenderRequestData: core.serialization.property(
        "data",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    ),
    type: StartImmediateRenderRequestType,
    target: StartImmediateRenderRequestTarget,
    templateId: core.serialization.string().optional(),
    formatOpts: StartImmediateRenderRequestFormatOpts.optional(),
    template: core.serialization.string().optional(),
});

export declare namespace StartImmediateRenderRequest {
    export interface Raw {
        data: Record<string, unknown>;
        type: StartImmediateRenderRequestType.Raw;
        target: StartImmediateRenderRequestTarget.Raw;
        templateId?: string | null;
        formatOpts?: StartImmediateRenderRequestFormatOpts.Raw | null;
        template?: string | null;
    }
}
