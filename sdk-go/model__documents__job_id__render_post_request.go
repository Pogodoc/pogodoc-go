/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DocumentsJobIdRenderPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentsJobIdRenderPostRequest{}

// DocumentsJobIdRenderPostRequest struct for DocumentsJobIdRenderPostRequest
type DocumentsJobIdRenderPostRequest struct {
	ShouldWaitForRenderCompletion *bool `json:"shouldWaitForRenderCompletion,omitempty"`
	UploadPresignedS3Url *string `json:"uploadPresignedS3Url,omitempty"`
}

// NewDocumentsJobIdRenderPostRequest instantiates a new DocumentsJobIdRenderPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsJobIdRenderPostRequest() *DocumentsJobIdRenderPostRequest {
	this := DocumentsJobIdRenderPostRequest{}
	return &this
}

// NewDocumentsJobIdRenderPostRequestWithDefaults instantiates a new DocumentsJobIdRenderPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsJobIdRenderPostRequestWithDefaults() *DocumentsJobIdRenderPostRequest {
	this := DocumentsJobIdRenderPostRequest{}
	return &this
}

// GetShouldWaitForRenderCompletion returns the ShouldWaitForRenderCompletion field value if set, zero value otherwise.
func (o *DocumentsJobIdRenderPostRequest) GetShouldWaitForRenderCompletion() bool {
	if o == nil || IsNil(o.ShouldWaitForRenderCompletion) {
		var ret bool
		return ret
	}
	return *o.ShouldWaitForRenderCompletion
}

// GetShouldWaitForRenderCompletionOk returns a tuple with the ShouldWaitForRenderCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsJobIdRenderPostRequest) GetShouldWaitForRenderCompletionOk() (*bool, bool) {
	if o == nil || IsNil(o.ShouldWaitForRenderCompletion) {
		return nil, false
	}
	return o.ShouldWaitForRenderCompletion, true
}

// HasShouldWaitForRenderCompletion returns a boolean if a field has been set.
func (o *DocumentsJobIdRenderPostRequest) HasShouldWaitForRenderCompletion() bool {
	if o != nil && !IsNil(o.ShouldWaitForRenderCompletion) {
		return true
	}

	return false
}

// SetShouldWaitForRenderCompletion gets a reference to the given bool and assigns it to the ShouldWaitForRenderCompletion field.
func (o *DocumentsJobIdRenderPostRequest) SetShouldWaitForRenderCompletion(v bool) {
	o.ShouldWaitForRenderCompletion = &v
}

// GetUploadPresignedS3Url returns the UploadPresignedS3Url field value if set, zero value otherwise.
func (o *DocumentsJobIdRenderPostRequest) GetUploadPresignedS3Url() string {
	if o == nil || IsNil(o.UploadPresignedS3Url) {
		var ret string
		return ret
	}
	return *o.UploadPresignedS3Url
}

// GetUploadPresignedS3UrlOk returns a tuple with the UploadPresignedS3Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsJobIdRenderPostRequest) GetUploadPresignedS3UrlOk() (*string, bool) {
	if o == nil || IsNil(o.UploadPresignedS3Url) {
		return nil, false
	}
	return o.UploadPresignedS3Url, true
}

// HasUploadPresignedS3Url returns a boolean if a field has been set.
func (o *DocumentsJobIdRenderPostRequest) HasUploadPresignedS3Url() bool {
	if o != nil && !IsNil(o.UploadPresignedS3Url) {
		return true
	}

	return false
}

// SetUploadPresignedS3Url gets a reference to the given string and assigns it to the UploadPresignedS3Url field.
func (o *DocumentsJobIdRenderPostRequest) SetUploadPresignedS3Url(v string) {
	o.UploadPresignedS3Url = &v
}

func (o DocumentsJobIdRenderPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentsJobIdRenderPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShouldWaitForRenderCompletion) {
		toSerialize["shouldWaitForRenderCompletion"] = o.ShouldWaitForRenderCompletion
	}
	if !IsNil(o.UploadPresignedS3Url) {
		toSerialize["uploadPresignedS3Url"] = o.UploadPresignedS3Url
	}
	return toSerialize, nil
}

type NullableDocumentsJobIdRenderPostRequest struct {
	value *DocumentsJobIdRenderPostRequest
	isSet bool
}

func (v NullableDocumentsJobIdRenderPostRequest) Get() *DocumentsJobIdRenderPostRequest {
	return v.value
}

func (v *NullableDocumentsJobIdRenderPostRequest) Set(val *DocumentsJobIdRenderPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsJobIdRenderPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsJobIdRenderPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsJobIdRenderPostRequest(val *DocumentsJobIdRenderPostRequest) *NullableDocumentsJobIdRenderPostRequest {
	return &NullableDocumentsJobIdRenderPostRequest{value: val, isSet: true}
}

func (v NullableDocumentsJobIdRenderPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsJobIdRenderPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


