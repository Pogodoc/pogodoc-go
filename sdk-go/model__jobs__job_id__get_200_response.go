/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the JobsJobIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsJobIdGet200Response{}

// JobsJobIdGet200Response struct for JobsJobIdGet200Response
type JobsJobIdGet200Response struct {
	Type TemplatesTemplateIdPutRequestAllOfTemplateInfoType `json:"type"`
	JobId string `json:"jobId"`
	Target DocumentsInitPostRequestAllOfTarget `json:"target"`
	Output *JobsJobIdGet200ResponseOutput `json:"output,omitempty"`
	Success *bool `json:"success,omitempty"`
	Status *string `json:"status,omitempty"`
}

type _JobsJobIdGet200Response JobsJobIdGet200Response

// NewJobsJobIdGet200Response instantiates a new JobsJobIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJobIdGet200Response(type_ TemplatesTemplateIdPutRequestAllOfTemplateInfoType, jobId string, target DocumentsInitPostRequestAllOfTarget) *JobsJobIdGet200Response {
	this := JobsJobIdGet200Response{}
	this.Type = type_
	this.JobId = jobId
	this.Target = target
	return &this
}

// NewJobsJobIdGet200ResponseWithDefaults instantiates a new JobsJobIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobIdGet200ResponseWithDefaults() *JobsJobIdGet200Response {
	this := JobsJobIdGet200Response{}
	return &this
}

// GetType returns the Type field value
func (o *JobsJobIdGet200Response) GetType() TemplatesTemplateIdPutRequestAllOfTemplateInfoType {
	if o == nil {
		var ret TemplatesTemplateIdPutRequestAllOfTemplateInfoType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200Response) GetTypeOk() (*TemplatesTemplateIdPutRequestAllOfTemplateInfoType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *JobsJobIdGet200Response) SetType(v TemplatesTemplateIdPutRequestAllOfTemplateInfoType) {
	o.Type = v
}

// GetJobId returns the JobId field value
func (o *JobsJobIdGet200Response) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200Response) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *JobsJobIdGet200Response) SetJobId(v string) {
	o.JobId = v
}

// GetTarget returns the Target field value
func (o *JobsJobIdGet200Response) GetTarget() DocumentsInitPostRequestAllOfTarget {
	if o == nil {
		var ret DocumentsInitPostRequestAllOfTarget
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200Response) GetTargetOk() (*DocumentsInitPostRequestAllOfTarget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *JobsJobIdGet200Response) SetTarget(v DocumentsInitPostRequestAllOfTarget) {
	o.Target = v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *JobsJobIdGet200Response) GetOutput() JobsJobIdGet200ResponseOutput {
	if o == nil || IsNil(o.Output) {
		var ret JobsJobIdGet200ResponseOutput
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200Response) GetOutputOk() (*JobsJobIdGet200ResponseOutput, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *JobsJobIdGet200Response) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given JobsJobIdGet200ResponseOutput and assigns it to the Output field.
func (o *JobsJobIdGet200Response) SetOutput(v JobsJobIdGet200ResponseOutput) {
	o.Output = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *JobsJobIdGet200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *JobsJobIdGet200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *JobsJobIdGet200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobsJobIdGet200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobsJobIdGet200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JobsJobIdGet200Response) SetStatus(v string) {
	o.Status = &v
}

func (o JobsJobIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsJobIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["jobId"] = o.JobId
	toSerialize["target"] = o.Target
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

func (o *JobsJobIdGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"jobId",
		"target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobsJobIdGet200Response := _JobsJobIdGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJobsJobIdGet200Response)

	if err != nil {
		return err
	}

	*o = JobsJobIdGet200Response(varJobsJobIdGet200Response)

	return err
}

type NullableJobsJobIdGet200Response struct {
	value *JobsJobIdGet200Response
	isSet bool
}

func (v NullableJobsJobIdGet200Response) Get() *JobsJobIdGet200Response {
	return v.value
}

func (v *NullableJobsJobIdGet200Response) Set(val *JobsJobIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJobIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJobIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJobIdGet200Response(val *JobsJobIdGet200Response) *NullableJobsJobIdGet200Response {
	return &NullableJobsJobIdGet200Response{value: val, isSet: true}
}

func (v NullableJobsJobIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJobIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


