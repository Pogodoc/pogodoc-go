/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TemplatesTemplateIdPutRequestAllOfTemplateInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplatesTemplateIdPutRequestAllOfTemplateInfo{}

// TemplatesTemplateIdPutRequestAllOfTemplateInfo struct for TemplatesTemplateIdPutRequestAllOfTemplateInfo
type TemplatesTemplateIdPutRequestAllOfTemplateInfo struct {
	Title string `json:"title"`
	Description string `json:"description"`
	Type TemplatesTemplateIdPutRequestAllOfTemplateInfoType `json:"type"`
	SampleData map[string]interface{} `json:"sampleData"`
	SourceCode *string `json:"sourceCode,omitempty"`
	Categories []TemplatesTemplateIdPutRequestAllOfTemplateInfoCategoriesInner `json:"categories"`
}

type _TemplatesTemplateIdPutRequestAllOfTemplateInfo TemplatesTemplateIdPutRequestAllOfTemplateInfo

// NewTemplatesTemplateIdPutRequestAllOfTemplateInfo instantiates a new TemplatesTemplateIdPutRequestAllOfTemplateInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatesTemplateIdPutRequestAllOfTemplateInfo(title string, description string, type_ TemplatesTemplateIdPutRequestAllOfTemplateInfoType, sampleData map[string]interface{}, categories []TemplatesTemplateIdPutRequestAllOfTemplateInfoCategoriesInner) *TemplatesTemplateIdPutRequestAllOfTemplateInfo {
	this := TemplatesTemplateIdPutRequestAllOfTemplateInfo{}
	this.Title = title
	this.Description = description
	this.Type = type_
	this.SampleData = sampleData
	this.Categories = categories
	return &this
}

// NewTemplatesTemplateIdPutRequestAllOfTemplateInfoWithDefaults instantiates a new TemplatesTemplateIdPutRequestAllOfTemplateInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatesTemplateIdPutRequestAllOfTemplateInfoWithDefaults() *TemplatesTemplateIdPutRequestAllOfTemplateInfo {
	this := TemplatesTemplateIdPutRequestAllOfTemplateInfo{}
	return &this
}

// GetTitle returns the Title field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) SetDescription(v string) {
	o.Description = v
}

// GetType returns the Type field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetType() TemplatesTemplateIdPutRequestAllOfTemplateInfoType {
	if o == nil {
		var ret TemplatesTemplateIdPutRequestAllOfTemplateInfoType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetTypeOk() (*TemplatesTemplateIdPutRequestAllOfTemplateInfoType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) SetType(v TemplatesTemplateIdPutRequestAllOfTemplateInfoType) {
	o.Type = v
}

// GetSampleData returns the SampleData field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetSampleData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.SampleData
}

// GetSampleDataOk returns a tuple with the SampleData field value
// and a boolean to check if the value has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetSampleDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.SampleData, true
}

// SetSampleData sets field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) SetSampleData(v map[string]interface{}) {
	o.SampleData = v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetCategories returns the Categories field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetCategories() []TemplatesTemplateIdPutRequestAllOfTemplateInfoCategoriesInner {
	if o == nil {
		var ret []TemplatesTemplateIdPutRequestAllOfTemplateInfoCategoriesInner
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) GetCategoriesOk() ([]TemplatesTemplateIdPutRequestAllOfTemplateInfoCategoriesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) SetCategories(v []TemplatesTemplateIdPutRequestAllOfTemplateInfoCategoriesInner) {
	o.Categories = v
}

func (o TemplatesTemplateIdPutRequestAllOfTemplateInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplatesTemplateIdPutRequestAllOfTemplateInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	toSerialize["type"] = o.Type
	toSerialize["sampleData"] = o.SampleData
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	toSerialize["categories"] = o.Categories
	return toSerialize, nil
}

func (o *TemplatesTemplateIdPutRequestAllOfTemplateInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"description",
		"type",
		"sampleData",
		"categories",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTemplatesTemplateIdPutRequestAllOfTemplateInfo := _TemplatesTemplateIdPutRequestAllOfTemplateInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTemplatesTemplateIdPutRequestAllOfTemplateInfo)

	if err != nil {
		return err
	}

	*o = TemplatesTemplateIdPutRequestAllOfTemplateInfo(varTemplatesTemplateIdPutRequestAllOfTemplateInfo)

	return err
}

type NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo struct {
	value *TemplatesTemplateIdPutRequestAllOfTemplateInfo
	isSet bool
}

func (v NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo) Get() *TemplatesTemplateIdPutRequestAllOfTemplateInfo {
	return v.value
}

func (v *NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo) Set(val *TemplatesTemplateIdPutRequestAllOfTemplateInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatesTemplateIdPutRequestAllOfTemplateInfo(val *TemplatesTemplateIdPutRequestAllOfTemplateInfo) *NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo {
	return &NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo{value: val, isSet: true}
}

func (v NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatesTemplateIdPutRequestAllOfTemplateInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


