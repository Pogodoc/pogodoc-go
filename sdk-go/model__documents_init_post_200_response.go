/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DocumentsInitPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentsInitPost200Response{}

// DocumentsInitPost200Response struct for DocumentsInitPost200Response
type DocumentsInitPost200Response struct {
	JobId string `json:"jobId"`
	Target DocumentsInitPostRequestAllOfTarget `json:"target"`
	PresignedDataUploadUrl NullableString `json:"presignedDataUploadUrl"`
	PresignedTemplateUploadUrl NullableString `json:"presignedTemplateUploadUrl"`
}

type _DocumentsInitPost200Response DocumentsInitPost200Response

// NewDocumentsInitPost200Response instantiates a new DocumentsInitPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsInitPost200Response(jobId string, target DocumentsInitPostRequestAllOfTarget, presignedDataUploadUrl NullableString, presignedTemplateUploadUrl NullableString) *DocumentsInitPost200Response {
	this := DocumentsInitPost200Response{}
	this.JobId = jobId
	this.Target = target
	this.PresignedDataUploadUrl = presignedDataUploadUrl
	this.PresignedTemplateUploadUrl = presignedTemplateUploadUrl
	return &this
}

// NewDocumentsInitPost200ResponseWithDefaults instantiates a new DocumentsInitPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsInitPost200ResponseWithDefaults() *DocumentsInitPost200Response {
	this := DocumentsInitPost200Response{}
	return &this
}

// GetJobId returns the JobId field value
func (o *DocumentsInitPost200Response) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *DocumentsInitPost200Response) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *DocumentsInitPost200Response) SetJobId(v string) {
	o.JobId = v
}

// GetTarget returns the Target field value
func (o *DocumentsInitPost200Response) GetTarget() DocumentsInitPostRequestAllOfTarget {
	if o == nil {
		var ret DocumentsInitPostRequestAllOfTarget
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *DocumentsInitPost200Response) GetTargetOk() (*DocumentsInitPostRequestAllOfTarget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *DocumentsInitPost200Response) SetTarget(v DocumentsInitPostRequestAllOfTarget) {
	o.Target = v
}

// GetPresignedDataUploadUrl returns the PresignedDataUploadUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DocumentsInitPost200Response) GetPresignedDataUploadUrl() string {
	if o == nil || o.PresignedDataUploadUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.PresignedDataUploadUrl.Get()
}

// GetPresignedDataUploadUrlOk returns a tuple with the PresignedDataUploadUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocumentsInitPost200Response) GetPresignedDataUploadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PresignedDataUploadUrl.Get(), o.PresignedDataUploadUrl.IsSet()
}

// SetPresignedDataUploadUrl sets field value
func (o *DocumentsInitPost200Response) SetPresignedDataUploadUrl(v string) {
	o.PresignedDataUploadUrl.Set(&v)
}

// GetPresignedTemplateUploadUrl returns the PresignedTemplateUploadUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DocumentsInitPost200Response) GetPresignedTemplateUploadUrl() string {
	if o == nil || o.PresignedTemplateUploadUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.PresignedTemplateUploadUrl.Get()
}

// GetPresignedTemplateUploadUrlOk returns a tuple with the PresignedTemplateUploadUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocumentsInitPost200Response) GetPresignedTemplateUploadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PresignedTemplateUploadUrl.Get(), o.PresignedTemplateUploadUrl.IsSet()
}

// SetPresignedTemplateUploadUrl sets field value
func (o *DocumentsInitPost200Response) SetPresignedTemplateUploadUrl(v string) {
	o.PresignedTemplateUploadUrl.Set(&v)
}

func (o DocumentsInitPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentsInitPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jobId"] = o.JobId
	toSerialize["target"] = o.Target
	toSerialize["presignedDataUploadUrl"] = o.PresignedDataUploadUrl.Get()
	toSerialize["presignedTemplateUploadUrl"] = o.PresignedTemplateUploadUrl.Get()
	return toSerialize, nil
}

func (o *DocumentsInitPost200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jobId",
		"target",
		"presignedDataUploadUrl",
		"presignedTemplateUploadUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentsInitPost200Response := _DocumentsInitPost200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentsInitPost200Response)

	if err != nil {
		return err
	}

	*o = DocumentsInitPost200Response(varDocumentsInitPost200Response)

	return err
}

type NullableDocumentsInitPost200Response struct {
	value *DocumentsInitPost200Response
	isSet bool
}

func (v NullableDocumentsInitPost200Response) Get() *DocumentsInitPost200Response {
	return v.value
}

func (v *NullableDocumentsInitPost200Response) Set(val *DocumentsInitPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsInitPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsInitPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsInitPost200Response(val *DocumentsInitPost200Response) *NullableDocumentsInitPost200Response {
	return &NullableDocumentsInitPost200Response{value: val, isSet: true}
}

func (v NullableDocumentsInitPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsInitPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


