/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DocumentsInitPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentsInitPostRequest{}

// DocumentsInitPostRequest struct for DocumentsInitPostRequest
type DocumentsInitPostRequest struct {
	Data map[string]interface{} `json:"data,omitempty"`
	Type TemplatesTemplateIdPutRequestAllOfTemplateInfoType `json:"type"`
	Target DocumentsInitPostRequestAllOfTarget `json:"target"`
	TemplateId *string `json:"templateId,omitempty"`
	FormatOpts *TemplatesTemplateIdRenderPreviewsPostRequestFormatOpts `json:"formatOpts,omitempty"`
}

type _DocumentsInitPostRequest DocumentsInitPostRequest

// NewDocumentsInitPostRequest instantiates a new DocumentsInitPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsInitPostRequest(type_ TemplatesTemplateIdPutRequestAllOfTemplateInfoType, target DocumentsInitPostRequestAllOfTarget) *DocumentsInitPostRequest {
	this := DocumentsInitPostRequest{}
	this.Type = type_
	this.Target = target
	return &this
}

// NewDocumentsInitPostRequestWithDefaults instantiates a new DocumentsInitPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsInitPostRequestWithDefaults() *DocumentsInitPostRequest {
	this := DocumentsInitPostRequest{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *DocumentsInitPostRequest) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsInitPostRequest) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *DocumentsInitPostRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *DocumentsInitPostRequest) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetType returns the Type field value
func (o *DocumentsInitPostRequest) GetType() TemplatesTemplateIdPutRequestAllOfTemplateInfoType {
	if o == nil {
		var ret TemplatesTemplateIdPutRequestAllOfTemplateInfoType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DocumentsInitPostRequest) GetTypeOk() (*TemplatesTemplateIdPutRequestAllOfTemplateInfoType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DocumentsInitPostRequest) SetType(v TemplatesTemplateIdPutRequestAllOfTemplateInfoType) {
	o.Type = v
}

// GetTarget returns the Target field value
func (o *DocumentsInitPostRequest) GetTarget() DocumentsInitPostRequestAllOfTarget {
	if o == nil {
		var ret DocumentsInitPostRequestAllOfTarget
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *DocumentsInitPostRequest) GetTargetOk() (*DocumentsInitPostRequestAllOfTarget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *DocumentsInitPostRequest) SetTarget(v DocumentsInitPostRequestAllOfTarget) {
	o.Target = v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *DocumentsInitPostRequest) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsInitPostRequest) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *DocumentsInitPostRequest) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *DocumentsInitPostRequest) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetFormatOpts returns the FormatOpts field value if set, zero value otherwise.
func (o *DocumentsInitPostRequest) GetFormatOpts() TemplatesTemplateIdRenderPreviewsPostRequestFormatOpts {
	if o == nil || IsNil(o.FormatOpts) {
		var ret TemplatesTemplateIdRenderPreviewsPostRequestFormatOpts
		return ret
	}
	return *o.FormatOpts
}

// GetFormatOptsOk returns a tuple with the FormatOpts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsInitPostRequest) GetFormatOptsOk() (*TemplatesTemplateIdRenderPreviewsPostRequestFormatOpts, bool) {
	if o == nil || IsNil(o.FormatOpts) {
		return nil, false
	}
	return o.FormatOpts, true
}

// HasFormatOpts returns a boolean if a field has been set.
func (o *DocumentsInitPostRequest) HasFormatOpts() bool {
	if o != nil && !IsNil(o.FormatOpts) {
		return true
	}

	return false
}

// SetFormatOpts gets a reference to the given TemplatesTemplateIdRenderPreviewsPostRequestFormatOpts and assigns it to the FormatOpts field.
func (o *DocumentsInitPostRequest) SetFormatOpts(v TemplatesTemplateIdRenderPreviewsPostRequestFormatOpts) {
	o.FormatOpts = &v
}

func (o DocumentsInitPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentsInitPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	toSerialize["type"] = o.Type
	toSerialize["target"] = o.Target
	if !IsNil(o.TemplateId) {
		toSerialize["templateId"] = o.TemplateId
	}
	if !IsNil(o.FormatOpts) {
		toSerialize["formatOpts"] = o.FormatOpts
	}
	return toSerialize, nil
}

func (o *DocumentsInitPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocumentsInitPostRequest := _DocumentsInitPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDocumentsInitPostRequest)

	if err != nil {
		return err
	}

	*o = DocumentsInitPostRequest(varDocumentsInitPostRequest)

	return err
}

type NullableDocumentsInitPostRequest struct {
	value *DocumentsInitPostRequest
	isSet bool
}

func (v NullableDocumentsInitPostRequest) Get() *DocumentsInitPostRequest {
	return v.value
}

func (v *NullableDocumentsInitPostRequest) Set(val *DocumentsInitPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsInitPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsInitPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsInitPostRequest(val *DocumentsInitPostRequest) *NullableDocumentsInitPostRequest {
	return &NullableDocumentsInitPostRequest{value: val, isSet: true}
}

func (v NullableDocumentsInitPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsInitPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


