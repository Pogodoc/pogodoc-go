/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TemplatesInitGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplatesInitGet200Response{}

// TemplatesInitGet200Response struct for TemplatesInitGet200Response
type TemplatesInitGet200Response struct {
	JobId string `json:"jobId"`
	PresignedTemplateUploadUrl string `json:"presignedTemplateUploadUrl"`
}

type _TemplatesInitGet200Response TemplatesInitGet200Response

// NewTemplatesInitGet200Response instantiates a new TemplatesInitGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatesInitGet200Response(jobId string, presignedTemplateUploadUrl string) *TemplatesInitGet200Response {
	this := TemplatesInitGet200Response{}
	this.JobId = jobId
	this.PresignedTemplateUploadUrl = presignedTemplateUploadUrl
	return &this
}

// NewTemplatesInitGet200ResponseWithDefaults instantiates a new TemplatesInitGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatesInitGet200ResponseWithDefaults() *TemplatesInitGet200Response {
	this := TemplatesInitGet200Response{}
	return &this
}

// GetJobId returns the JobId field value
func (o *TemplatesInitGet200Response) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *TemplatesInitGet200Response) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *TemplatesInitGet200Response) SetJobId(v string) {
	o.JobId = v
}

// GetPresignedTemplateUploadUrl returns the PresignedTemplateUploadUrl field value
func (o *TemplatesInitGet200Response) GetPresignedTemplateUploadUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PresignedTemplateUploadUrl
}

// GetPresignedTemplateUploadUrlOk returns a tuple with the PresignedTemplateUploadUrl field value
// and a boolean to check if the value has been set.
func (o *TemplatesInitGet200Response) GetPresignedTemplateUploadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PresignedTemplateUploadUrl, true
}

// SetPresignedTemplateUploadUrl sets field value
func (o *TemplatesInitGet200Response) SetPresignedTemplateUploadUrl(v string) {
	o.PresignedTemplateUploadUrl = v
}

func (o TemplatesInitGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplatesInitGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jobId"] = o.JobId
	toSerialize["presignedTemplateUploadUrl"] = o.PresignedTemplateUploadUrl
	return toSerialize, nil
}

func (o *TemplatesInitGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jobId",
		"presignedTemplateUploadUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTemplatesInitGet200Response := _TemplatesInitGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTemplatesInitGet200Response)

	if err != nil {
		return err
	}

	*o = TemplatesInitGet200Response(varTemplatesInitGet200Response)

	return err
}

type NullableTemplatesInitGet200Response struct {
	value *TemplatesInitGet200Response
	isSet bool
}

func (v NullableTemplatesInitGet200Response) Get() *TemplatesInitGet200Response {
	return v.value
}

func (v *NullableTemplatesInitGet200Response) Set(val *TemplatesInitGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatesInitGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatesInitGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatesInitGet200Response(val *TemplatesInitGet200Response) *NullableTemplatesInitGet200Response {
	return &NullableTemplatesInitGet200Response{value: val, isSet: true}
}

func (v NullableTemplatesInitGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatesInitGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


