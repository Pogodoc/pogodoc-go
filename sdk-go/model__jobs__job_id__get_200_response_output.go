/*
Pogodoc API

API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the JobsJobIdGet200ResponseOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsJobIdGet200ResponseOutput{}

// JobsJobIdGet200ResponseOutput struct for JobsJobIdGet200ResponseOutput
type JobsJobIdGet200ResponseOutput struct {
	Data DocumentsImmediateRenderPost200Response `json:"data"`
	Metadata JobsJobIdGet200ResponseOutputMetadata `json:"metadata"`
}

type _JobsJobIdGet200ResponseOutput JobsJobIdGet200ResponseOutput

// NewJobsJobIdGet200ResponseOutput instantiates a new JobsJobIdGet200ResponseOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJobIdGet200ResponseOutput(data DocumentsImmediateRenderPost200Response, metadata JobsJobIdGet200ResponseOutputMetadata) *JobsJobIdGet200ResponseOutput {
	this := JobsJobIdGet200ResponseOutput{}
	this.Data = data
	this.Metadata = metadata
	return &this
}

// NewJobsJobIdGet200ResponseOutputWithDefaults instantiates a new JobsJobIdGet200ResponseOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobIdGet200ResponseOutputWithDefaults() *JobsJobIdGet200ResponseOutput {
	this := JobsJobIdGet200ResponseOutput{}
	return &this
}

// GetData returns the Data field value
func (o *JobsJobIdGet200ResponseOutput) GetData() DocumentsImmediateRenderPost200Response {
	if o == nil {
		var ret DocumentsImmediateRenderPost200Response
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200ResponseOutput) GetDataOk() (*DocumentsImmediateRenderPost200Response, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *JobsJobIdGet200ResponseOutput) SetData(v DocumentsImmediateRenderPost200Response) {
	o.Data = v
}

// GetMetadata returns the Metadata field value
func (o *JobsJobIdGet200ResponseOutput) GetMetadata() JobsJobIdGet200ResponseOutputMetadata {
	if o == nil {
		var ret JobsJobIdGet200ResponseOutputMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *JobsJobIdGet200ResponseOutput) GetMetadataOk() (*JobsJobIdGet200ResponseOutputMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *JobsJobIdGet200ResponseOutput) SetMetadata(v JobsJobIdGet200ResponseOutputMetadata) {
	o.Metadata = v
}

func (o JobsJobIdGet200ResponseOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsJobIdGet200ResponseOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["metadata"] = o.Metadata
	return toSerialize, nil
}

func (o *JobsJobIdGet200ResponseOutput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobsJobIdGet200ResponseOutput := _JobsJobIdGet200ResponseOutput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJobsJobIdGet200ResponseOutput)

	if err != nil {
		return err
	}

	*o = JobsJobIdGet200ResponseOutput(varJobsJobIdGet200ResponseOutput)

	return err
}

type NullableJobsJobIdGet200ResponseOutput struct {
	value *JobsJobIdGet200ResponseOutput
	isSet bool
}

func (v NullableJobsJobIdGet200ResponseOutput) Get() *JobsJobIdGet200ResponseOutput {
	return v.value
}

func (v *NullableJobsJobIdGet200ResponseOutput) Set(val *JobsJobIdGet200ResponseOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJobIdGet200ResponseOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJobIdGet200ResponseOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJobIdGet200ResponseOutput(val *JobsJobIdGet200ResponseOutput) *NullableJobsJobIdGet200ResponseOutput {
	return &NullableJobsJobIdGet200ResponseOutput{value: val, isSet: true}
}

func (v NullableJobsJobIdGet200ResponseOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJobIdGet200ResponseOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


