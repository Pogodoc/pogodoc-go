// This file was auto-generated by Fern from our API Definition.

package client

import (
	http "net/http"
	core "sdk/core"
	documents "sdk/documents"
	templates "sdk/templates"
	tokens "sdk/tokens"
)

type Client interface {
	Templates() templates.Client
	Documents() documents.Client
	Tokens() tokens.Client
}

func NewClient(opts ...core.ClientOption) Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &client{
		baseURL:         options.BaseURL,
		httpClient:      options.HTTPClient,
		header:          options.ToHeader(),
		templatesClient: templates.NewClient(opts...),
		documentsClient: documents.NewClient(opts...),
		tokensClient:    tokens.NewClient(opts...),
	}
}

type client struct {
	baseURL         string
	httpClient      core.HTTPClient
	header          http.Header
	templatesClient templates.Client
	documentsClient documents.Client
	tokensClient    tokens.Client
}

func (c *client) Templates() templates.Client {
	return c.templatesClient
}

func (c *client) Documents() documents.Client {
	return c.documentsClient
}

func (c *client) Tokens() tokens.Client {
	return c.tokensClient
}
