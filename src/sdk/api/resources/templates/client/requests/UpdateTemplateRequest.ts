/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         templateInfo: {
 *             title: "title",
 *             description: "description",
 *             type: "docx",
 *             sampleData: {
 *                 "key": "value"
 *             },
 *             categories: ["invoice"]
 *         },
 *         previewIds: {
 *             pngJobId: "pngJobId",
 *             pdfJobId: "pdfJobId"
 *         },
 *         contentId: "contentId"
 *     }
 */
export interface UpdateTemplateRequest {
    templateInfo: UpdateTemplateRequest.TemplateInfo;
    previewIds: UpdateTemplateRequest.PreviewIds;
    contentId: string;
}

export namespace UpdateTemplateRequest {
    export interface TemplateInfo {
        title: string;
        description: string;
        type: TemplateInfo.Type;
        sampleData: Record<string, unknown>;
        sourceCode?: string;
        categories: TemplateInfo.Categories.Item[];
    }

    export namespace TemplateInfo {
        export type Type = "docx" | "xlsx" | "pptx" | "ejs" | "html" | "latex" | "react";
        export const Type = {
            Docx: "docx",
            Xlsx: "xlsx",
            Pptx: "pptx",
            Ejs: "ejs",
            Html: "html",
            Latex: "latex",
            React: "react",
        } as const;
        export type Categories = Categories.Item[];

        export namespace Categories {
            export type Item = "invoice" | "mail" | "report" | "cv" | "other";
            export const Item = {
                Invoice: "invoice",
                Mail: "mail",
                Report: "report",
                Cv: "cv",
                Other: "other",
            } as const;
        }
    }

    export interface PreviewIds {
        pngJobId: string;
        pdfJobId: string;
    }
}
