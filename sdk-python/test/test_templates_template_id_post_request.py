# coding: utf-8

"""
    Pogodoc API

    API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.templates_template_id_post_request import TemplatesTemplateIdPostRequest

class TestTemplatesTemplateIdPostRequest(unittest.TestCase):
    """TemplatesTemplateIdPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TemplatesTemplateIdPostRequest:
        """Test TemplatesTemplateIdPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TemplatesTemplateIdPostRequest`
        """
        model = TemplatesTemplateIdPostRequest()
        if include_optional:
            return TemplatesTemplateIdPostRequest(
                template_info = openapi_client.models._templates__template_id__put_request_all_of_template_info._templates__templateId__put_request_allOf_templateInfo(
                    title = '', 
                    description = '', 
                    type = null, 
                    sample_data = {
                        'key' : null
                        }, 
                    source_code = '', 
                    categories = [
                        null
                        ], ),
                preview_ids = openapi_client.models._templates__template_id__put_request_all_of_preview_ids._templates__templateId__put_request_allOf_previewIds(
                    png_job_id = '', 
                    pdf_job_id = '', )
            )
        else:
            return TemplatesTemplateIdPostRequest(
                template_info = openapi_client.models._templates__template_id__put_request_all_of_template_info._templates__templateId__put_request_allOf_templateInfo(
                    title = '', 
                    description = '', 
                    type = null, 
                    sample_data = {
                        'key' : null
                        }, 
                    source_code = '', 
                    categories = [
                        null
                        ], ),
                preview_ids = openapi_client.models._templates__template_id__put_request_all_of_preview_ids._templates__templateId__put_request_allOf_previewIds(
                    png_job_id = '', 
                    pdf_job_id = '', ),
        )
        """

    def testTemplatesTemplateIdPostRequest(self):
        """Test TemplatesTemplateIdPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
