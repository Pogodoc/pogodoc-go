=begin
#Pogodoc API

#API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.

The version of the OpenAPI document: 0.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::RenderApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RenderApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::RenderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RenderApi' do
    it 'should create an instance of RenderApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::RenderApi)
    end
  end

  # unit tests for documents_immediate_render_post
  # Immediate Render
  # Combines initialization and rendering in one step. Creates a job, uploads template/data directly, starts rendering, and adds the document to Strapi. Requires subscription check.
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentsImmediateRenderPostRequest] :documents_immediate_render_post_request 
  # @return [DocumentsImmediateRenderPost200Response]
  describe 'documents_immediate_render_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for documents_init_post
  # Initialize Render Job
  # Creates a new render job with a unique ID, sets up S3 storage for template and data files, and generates presigned upload URLs if needed. Requires subscription check.
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentsInitPostRequest] :documents_init_post_request 
  # @return [DocumentsInitPost200Response]
  describe 'documents_init_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for documents_job_id_render_post
  # Start Render Job
  # Takes a previously initialized job, updates its status to in-progress, and triggers the rendering process using Puppeteer. Can optionally wait for render completion.
  # @param job_id 
  # @param [Hash] opts the optional parameters
  # @option opts [DocumentsJobIdRenderPostRequest] :documents_job_id_render_post_request 
  # @return [DocumentsJobIdRenderPost200Response]
  describe 'documents_job_id_render_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for documents_render_preview_post
  # Generate Document Preview
  # Generates a preview by creating a single-page render job, processing it immediately, and returning the output URL. Used for template visualization.
  # @param template_id 
  # @param templates_template_id_render_previews_post_request 
  # @param [Hash] opts the optional parameters
  # @return [TemplatesTemplateIdRenderPreviewsPost200ResponsePngPreview]
  describe 'documents_render_preview_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for jobs_job_id_get
  # Get Job Status
  # Fetches detailed job information from S3 storage including job status, template ID, target format, and output details if available.
  # @param job_id 
  # @param [Hash] opts the optional parameters
  # @return [JobsJobIdGet200Response]
  describe 'jobs_job_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
