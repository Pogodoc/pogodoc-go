// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type GenerateTemplatePreviewsRequest struct {
	Type       GenerateTemplatePreviewsRequestType        `json:"type,omitempty"`
	Data       map[string]any                             `json:"data,omitempty"`
	FormatOpts *GenerateTemplatePreviewsRequestFormatOpts `json:"formatOpts,omitempty"`
}

type SaveCreatedTemplateRequest struct {
	TemplateInfo *SaveCreatedTemplateRequestTemplateInfo `json:"templateInfo,omitempty"`
	PreviewIds   *SaveCreatedTemplateRequestPreviewIds   `json:"previewIds,omitempty"`
}

type CloneTemplateResponse struct {
	NewTemplateId string `json:"newTemplateId"`
}

type GeneratePresignedGetUrlResponse struct {
	PresignedUrl string `json:"presignedUrl"`
}

type GenerateTemplatePreviewsRequestFormatOpts struct {
	FromPage        *float64                                         `json:"fromPage,omitempty"`
	ToPage          *float64                                         `json:"toPage,omitempty"`
	Format          *GenerateTemplatePreviewsRequestFormatOptsFormat `json:"format,omitempty"`
	WaitForSelector *string                                          `json:"waitForSelector,omitempty"`
}

type GenerateTemplatePreviewsRequestFormatOptsFormat uint

const (
	GenerateTemplatePreviewsRequestFormatOptsFormatLetter GenerateTemplatePreviewsRequestFormatOptsFormat = iota + 1
	GenerateTemplatePreviewsRequestFormatOptsFormatLegal
	GenerateTemplatePreviewsRequestFormatOptsFormatTabloid
	GenerateTemplatePreviewsRequestFormatOptsFormatLedger
	GenerateTemplatePreviewsRequestFormatOptsFormatA0
	GenerateTemplatePreviewsRequestFormatOptsFormatA1
	GenerateTemplatePreviewsRequestFormatOptsFormatA2
	GenerateTemplatePreviewsRequestFormatOptsFormatA3
	GenerateTemplatePreviewsRequestFormatOptsFormatA4
	GenerateTemplatePreviewsRequestFormatOptsFormatA5
	GenerateTemplatePreviewsRequestFormatOptsFormatA6
)

func (g GenerateTemplatePreviewsRequestFormatOptsFormat) String() string {
	switch g {
	default:
		return strconv.Itoa(int(g))
	case GenerateTemplatePreviewsRequestFormatOptsFormatLetter:
		return "letter"
	case GenerateTemplatePreviewsRequestFormatOptsFormatLegal:
		return "legal"
	case GenerateTemplatePreviewsRequestFormatOptsFormatTabloid:
		return "tabloid"
	case GenerateTemplatePreviewsRequestFormatOptsFormatLedger:
		return "ledger"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA0:
		return "a0"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA1:
		return "a1"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA2:
		return "a2"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA3:
		return "a3"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA4:
		return "a4"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA5:
		return "a5"
	case GenerateTemplatePreviewsRequestFormatOptsFormatA6:
		return "a6"
	}
}

func (g GenerateTemplatePreviewsRequestFormatOptsFormat) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", g.String())), nil
}

func (g *GenerateTemplatePreviewsRequestFormatOptsFormat) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "letter":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatLetter
		*g = value
	case "legal":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatLegal
		*g = value
	case "tabloid":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatTabloid
		*g = value
	case "ledger":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatLedger
		*g = value
	case "a0":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA0
		*g = value
	case "a1":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA1
		*g = value
	case "a2":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA2
		*g = value
	case "a3":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA3
		*g = value
	case "a4":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA4
		*g = value
	case "a5":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA5
		*g = value
	case "a6":
		value := GenerateTemplatePreviewsRequestFormatOptsFormatA6
		*g = value
	}
	return nil
}

type GenerateTemplatePreviewsRequestType uint

const (
	GenerateTemplatePreviewsRequestTypeDocx GenerateTemplatePreviewsRequestType = iota + 1
	GenerateTemplatePreviewsRequestTypeXlsx
	GenerateTemplatePreviewsRequestTypePptx
	GenerateTemplatePreviewsRequestTypeEjs
	GenerateTemplatePreviewsRequestTypeHtml
	GenerateTemplatePreviewsRequestTypeLatex
	GenerateTemplatePreviewsRequestTypeReact
)

func (g GenerateTemplatePreviewsRequestType) String() string {
	switch g {
	default:
		return strconv.Itoa(int(g))
	case GenerateTemplatePreviewsRequestTypeDocx:
		return "docx"
	case GenerateTemplatePreviewsRequestTypeXlsx:
		return "xlsx"
	case GenerateTemplatePreviewsRequestTypePptx:
		return "pptx"
	case GenerateTemplatePreviewsRequestTypeEjs:
		return "ejs"
	case GenerateTemplatePreviewsRequestTypeHtml:
		return "html"
	case GenerateTemplatePreviewsRequestTypeLatex:
		return "latex"
	case GenerateTemplatePreviewsRequestTypeReact:
		return "react"
	}
}

func (g GenerateTemplatePreviewsRequestType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", g.String())), nil
}

func (g *GenerateTemplatePreviewsRequestType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "docx":
		value := GenerateTemplatePreviewsRequestTypeDocx
		*g = value
	case "xlsx":
		value := GenerateTemplatePreviewsRequestTypeXlsx
		*g = value
	case "pptx":
		value := GenerateTemplatePreviewsRequestTypePptx
		*g = value
	case "ejs":
		value := GenerateTemplatePreviewsRequestTypeEjs
		*g = value
	case "html":
		value := GenerateTemplatePreviewsRequestTypeHtml
		*g = value
	case "latex":
		value := GenerateTemplatePreviewsRequestTypeLatex
		*g = value
	case "react":
		value := GenerateTemplatePreviewsRequestTypeReact
		*g = value
	}
	return nil
}

type GenerateTemplatePreviewsResponse struct {
	PngPreview *GenerateTemplatePreviewsResponsePngPreview `json:"pngPreview,omitempty"`
	PdfPreview *GenerateTemplatePreviewsResponsePdfPreview `json:"pdfPreview,omitempty"`
}

type GenerateTemplatePreviewsResponsePdfPreview struct {
	Url   *string `json:"url,omitempty"`
	JobId string  `json:"jobId"`
}

type GenerateTemplatePreviewsResponsePngPreview struct {
	Url   *string `json:"url,omitempty"`
	JobId string  `json:"jobId"`
}

type GetTemplateIndexHtmlResponse struct {
	TemplateIndex string `json:"templateIndex"`
}

type InitializeTemplateCreationResponse struct {
	JobId                      string `json:"jobId"`
	PresignedTemplateUploadUrl string `json:"presignedTemplateUploadUrl"`
}

type SaveCreatedTemplateRequestPreviewIds struct {
	PngJobId string `json:"pngJobId"`
	PdfJobId string `json:"pdfJobId"`
}

type SaveCreatedTemplateRequestTemplateInfo struct {
	Title       string                                                 `json:"title"`
	Description string                                                 `json:"description"`
	Type        SaveCreatedTemplateRequestTemplateInfoType             `json:"type,omitempty"`
	SampleData  map[string]any                                         `json:"sampleData,omitempty"`
	SourceCode  *string                                                `json:"sourceCode,omitempty"`
	Categories  []SaveCreatedTemplateRequestTemplateInfoCategoriesItem `json:"categories,omitempty"`
}

type SaveCreatedTemplateRequestTemplateInfoCategoriesItem uint

const (
	SaveCreatedTemplateRequestTemplateInfoCategoriesItemInvoice SaveCreatedTemplateRequestTemplateInfoCategoriesItem = iota + 1
	SaveCreatedTemplateRequestTemplateInfoCategoriesItemMail
	SaveCreatedTemplateRequestTemplateInfoCategoriesItemReport
	SaveCreatedTemplateRequestTemplateInfoCategoriesItemCv
	SaveCreatedTemplateRequestTemplateInfoCategoriesItemOther
)

func (s SaveCreatedTemplateRequestTemplateInfoCategoriesItem) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case SaveCreatedTemplateRequestTemplateInfoCategoriesItemInvoice:
		return "invoice"
	case SaveCreatedTemplateRequestTemplateInfoCategoriesItemMail:
		return "mail"
	case SaveCreatedTemplateRequestTemplateInfoCategoriesItemReport:
		return "report"
	case SaveCreatedTemplateRequestTemplateInfoCategoriesItemCv:
		return "cv"
	case SaveCreatedTemplateRequestTemplateInfoCategoriesItemOther:
		return "other"
	}
}

func (s SaveCreatedTemplateRequestTemplateInfoCategoriesItem) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *SaveCreatedTemplateRequestTemplateInfoCategoriesItem) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "invoice":
		value := SaveCreatedTemplateRequestTemplateInfoCategoriesItemInvoice
		*s = value
	case "mail":
		value := SaveCreatedTemplateRequestTemplateInfoCategoriesItemMail
		*s = value
	case "report":
		value := SaveCreatedTemplateRequestTemplateInfoCategoriesItemReport
		*s = value
	case "cv":
		value := SaveCreatedTemplateRequestTemplateInfoCategoriesItemCv
		*s = value
	case "other":
		value := SaveCreatedTemplateRequestTemplateInfoCategoriesItemOther
		*s = value
	}
	return nil
}

type SaveCreatedTemplateRequestTemplateInfoType uint

const (
	SaveCreatedTemplateRequestTemplateInfoTypeDocx SaveCreatedTemplateRequestTemplateInfoType = iota + 1
	SaveCreatedTemplateRequestTemplateInfoTypeXlsx
	SaveCreatedTemplateRequestTemplateInfoTypePptx
	SaveCreatedTemplateRequestTemplateInfoTypeEjs
	SaveCreatedTemplateRequestTemplateInfoTypeHtml
	SaveCreatedTemplateRequestTemplateInfoTypeLatex
	SaveCreatedTemplateRequestTemplateInfoTypeReact
)

func (s SaveCreatedTemplateRequestTemplateInfoType) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case SaveCreatedTemplateRequestTemplateInfoTypeDocx:
		return "docx"
	case SaveCreatedTemplateRequestTemplateInfoTypeXlsx:
		return "xlsx"
	case SaveCreatedTemplateRequestTemplateInfoTypePptx:
		return "pptx"
	case SaveCreatedTemplateRequestTemplateInfoTypeEjs:
		return "ejs"
	case SaveCreatedTemplateRequestTemplateInfoTypeHtml:
		return "html"
	case SaveCreatedTemplateRequestTemplateInfoTypeLatex:
		return "latex"
	case SaveCreatedTemplateRequestTemplateInfoTypeReact:
		return "react"
	}
}

func (s SaveCreatedTemplateRequestTemplateInfoType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *SaveCreatedTemplateRequestTemplateInfoType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "docx":
		value := SaveCreatedTemplateRequestTemplateInfoTypeDocx
		*s = value
	case "xlsx":
		value := SaveCreatedTemplateRequestTemplateInfoTypeXlsx
		*s = value
	case "pptx":
		value := SaveCreatedTemplateRequestTemplateInfoTypePptx
		*s = value
	case "ejs":
		value := SaveCreatedTemplateRequestTemplateInfoTypeEjs
		*s = value
	case "html":
		value := SaveCreatedTemplateRequestTemplateInfoTypeHtml
		*s = value
	case "latex":
		value := SaveCreatedTemplateRequestTemplateInfoTypeLatex
		*s = value
	case "react":
		value := SaveCreatedTemplateRequestTemplateInfoTypeReact
		*s = value
	}
	return nil
}

type UpdateTemplateRequestPreviewIds struct {
	PngJobId string `json:"pngJobId"`
	PdfJobId string `json:"pdfJobId"`
}

type UpdateTemplateRequestTemplateInfo struct {
	Title       string                                            `json:"title"`
	Description string                                            `json:"description"`
	Type        UpdateTemplateRequestTemplateInfoType             `json:"type,omitempty"`
	SampleData  map[string]any                                    `json:"sampleData,omitempty"`
	SourceCode  *string                                           `json:"sourceCode,omitempty"`
	Categories  []UpdateTemplateRequestTemplateInfoCategoriesItem `json:"categories,omitempty"`
}

type UpdateTemplateRequestTemplateInfoCategoriesItem uint

const (
	UpdateTemplateRequestTemplateInfoCategoriesItemInvoice UpdateTemplateRequestTemplateInfoCategoriesItem = iota + 1
	UpdateTemplateRequestTemplateInfoCategoriesItemMail
	UpdateTemplateRequestTemplateInfoCategoriesItemReport
	UpdateTemplateRequestTemplateInfoCategoriesItemCv
	UpdateTemplateRequestTemplateInfoCategoriesItemOther
)

func (u UpdateTemplateRequestTemplateInfoCategoriesItem) String() string {
	switch u {
	default:
		return strconv.Itoa(int(u))
	case UpdateTemplateRequestTemplateInfoCategoriesItemInvoice:
		return "invoice"
	case UpdateTemplateRequestTemplateInfoCategoriesItemMail:
		return "mail"
	case UpdateTemplateRequestTemplateInfoCategoriesItemReport:
		return "report"
	case UpdateTemplateRequestTemplateInfoCategoriesItemCv:
		return "cv"
	case UpdateTemplateRequestTemplateInfoCategoriesItemOther:
		return "other"
	}
}

func (u UpdateTemplateRequestTemplateInfoCategoriesItem) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", u.String())), nil
}

func (u *UpdateTemplateRequestTemplateInfoCategoriesItem) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "invoice":
		value := UpdateTemplateRequestTemplateInfoCategoriesItemInvoice
		*u = value
	case "mail":
		value := UpdateTemplateRequestTemplateInfoCategoriesItemMail
		*u = value
	case "report":
		value := UpdateTemplateRequestTemplateInfoCategoriesItemReport
		*u = value
	case "cv":
		value := UpdateTemplateRequestTemplateInfoCategoriesItemCv
		*u = value
	case "other":
		value := UpdateTemplateRequestTemplateInfoCategoriesItemOther
		*u = value
	}
	return nil
}

type UpdateTemplateRequestTemplateInfoType uint

const (
	UpdateTemplateRequestTemplateInfoTypeDocx UpdateTemplateRequestTemplateInfoType = iota + 1
	UpdateTemplateRequestTemplateInfoTypeXlsx
	UpdateTemplateRequestTemplateInfoTypePptx
	UpdateTemplateRequestTemplateInfoTypeEjs
	UpdateTemplateRequestTemplateInfoTypeHtml
	UpdateTemplateRequestTemplateInfoTypeLatex
	UpdateTemplateRequestTemplateInfoTypeReact
)

func (u UpdateTemplateRequestTemplateInfoType) String() string {
	switch u {
	default:
		return strconv.Itoa(int(u))
	case UpdateTemplateRequestTemplateInfoTypeDocx:
		return "docx"
	case UpdateTemplateRequestTemplateInfoTypeXlsx:
		return "xlsx"
	case UpdateTemplateRequestTemplateInfoTypePptx:
		return "pptx"
	case UpdateTemplateRequestTemplateInfoTypeEjs:
		return "ejs"
	case UpdateTemplateRequestTemplateInfoTypeHtml:
		return "html"
	case UpdateTemplateRequestTemplateInfoTypeLatex:
		return "latex"
	case UpdateTemplateRequestTemplateInfoTypeReact:
		return "react"
	}
}

func (u UpdateTemplateRequestTemplateInfoType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", u.String())), nil
}

func (u *UpdateTemplateRequestTemplateInfoType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "docx":
		value := UpdateTemplateRequestTemplateInfoTypeDocx
		*u = value
	case "xlsx":
		value := UpdateTemplateRequestTemplateInfoTypeXlsx
		*u = value
	case "pptx":
		value := UpdateTemplateRequestTemplateInfoTypePptx
		*u = value
	case "ejs":
		value := UpdateTemplateRequestTemplateInfoTypeEjs
		*u = value
	case "html":
		value := UpdateTemplateRequestTemplateInfoTypeHtml
		*u = value
	case "latex":
		value := UpdateTemplateRequestTemplateInfoTypeLatex
		*u = value
	case "react":
		value := UpdateTemplateRequestTemplateInfoTypeReact
		*u = value
	}
	return nil
}

type UpdateTemplateResponse struct {
	NewContentId string `json:"newContentId"`
}

type UpdateTemplateRequest struct {
	TemplateInfo *UpdateTemplateRequestTemplateInfo `json:"templateInfo,omitempty"`
	PreviewIds   *UpdateTemplateRequestPreviewIds   `json:"previewIds,omitempty"`
	ContentId    string                             `json:"contentId"`
}

type UploadTemplateIndexHtmlRequest struct {
	TemplateIndex string `json:"templateIndex"`
}
