/*
 * Pogodoc API
 * API for Pogodoc document and template management service. Provides endpoints for rendering documents, managing templates, generating previews, and handling API tokens.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DocumentsImmediateRenderPost200Response;
import org.openapitools.client.model.DocumentsImmediateRenderPostRequest;
import org.openapitools.client.model.DocumentsInitPost200Response;
import org.openapitools.client.model.DocumentsInitPostRequest;
import org.openapitools.client.model.DocumentsJobIdRenderPost200Response;
import org.openapitools.client.model.DocumentsJobIdRenderPostRequest;
import org.openapitools.client.model.JobsJobIdGet200Response;
import org.openapitools.client.model.TemplatesTemplateIdRenderPreviewsPost200ResponsePngPreview;
import org.openapitools.client.model.TemplatesTemplateIdRenderPreviewsPostRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RenderApi
 */
@Disabled
public class RenderApiTest {

    private final RenderApi api = new RenderApi();

    /**
     * Immediate Render
     *
     * Combines initialization and rendering in one step. Creates a job, uploads template/data directly, starts rendering, and adds the document to Strapi. Requires subscription check.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void documentsImmediateRenderPostTest() throws ApiException {
        DocumentsImmediateRenderPostRequest documentsImmediateRenderPostRequest = null;
        DocumentsImmediateRenderPost200Response response = api.documentsImmediateRenderPost(documentsImmediateRenderPostRequest);
        // TODO: test validations
    }

    /**
     * Initialize Render Job
     *
     * Creates a new render job with a unique ID, sets up S3 storage for template and data files, and generates presigned upload URLs if needed. Requires subscription check.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void documentsInitPostTest() throws ApiException {
        DocumentsInitPostRequest documentsInitPostRequest = null;
        DocumentsInitPost200Response response = api.documentsInitPost(documentsInitPostRequest);
        // TODO: test validations
    }

    /**
     * Start Render Job
     *
     * Takes a previously initialized job, updates its status to in-progress, and triggers the rendering process using Puppeteer. Can optionally wait for render completion.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void documentsJobIdRenderPostTest() throws ApiException {
        String jobId = null;
        DocumentsJobIdRenderPostRequest documentsJobIdRenderPostRequest = null;
        DocumentsJobIdRenderPost200Response response = api.documentsJobIdRenderPost(jobId, documentsJobIdRenderPostRequest);
        // TODO: test validations
    }

    /**
     * Generate Document Preview
     *
     * Generates a preview by creating a single-page render job, processing it immediately, and returning the output URL. Used for template visualization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void documentsRenderPreviewPostTest() throws ApiException {
        String templateId = null;
        TemplatesTemplateIdRenderPreviewsPostRequest templatesTemplateIdRenderPreviewsPostRequest = null;
        TemplatesTemplateIdRenderPreviewsPost200ResponsePngPreview response = api.documentsRenderPreviewPost(templateId, templatesTemplateIdRenderPreviewsPostRequest);
        // TODO: test validations
    }

    /**
     * Get Job Status
     *
     * Fetches detailed job information from S3 storage including job status, template ID, target format, and output details if available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsJobIdGetTest() throws ApiException {
        String jobId = null;
        JobsJobIdGet200Response response = api.jobsJobIdGet(jobId);
        // TODO: test validations
    }

}
